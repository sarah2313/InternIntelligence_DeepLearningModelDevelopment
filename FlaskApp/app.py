# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1rWOPxOOSe4CMjLme2R47ZSV61Ko3qK--
"""

from flask import Flask, request, jsonify
import numpy as np
import tensorflow as tf
from tensorflow import keras

# Load the trained model
model = keras.models.load_model("mnist_cnn_model.h5")

# Initialize Flask app
app = Flask(__name__)

@app.route("/")
def home():
    return "MNIST Model API is running!"

@app.route("/predict", methods=["POST"])
def predict():
    data = request.get_json()
    if "image" not in data:
        return jsonify({"error": "No image data found"}), 400

    # Convert list to numpy array and reshape
    image = np.array(data["image"]).astype("float32") / 255.0
    image = np.expand_dims(image, axis=0)  # Add batch dimension
    image = np.expand_dims(image, axis=-1)  # Add channel dimension

    # Make prediction
    prediction = model.predict(image)
    predicted_label = np.argmax(prediction)

    return jsonify({"predicted_label": int(predicted_label)})

if __name__ == "__main__":
    app.run(debug=True)
